{"ast":null,"code":"import _classCallCheck from \"/home/svatostop/Desktop/\\u0445\\u0430\\u0445\\u0430\\u0442\\u043E\\u043D/maps/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/svatostop/Desktop/\\u0445\\u0430\\u0445\\u0430\\u0442\\u043E\\u043D/maps/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/svatostop/Desktop/\\u0445\\u0430\\u0445\\u0430\\u0442\\u043E\\u043D/maps/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/svatostop/Desktop/\\u0445\\u0430\\u0445\\u0430\\u0442\\u043E\\u043D/maps/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\nimport { GeoJson, FeatureGroup, Popup } from 'react-leaflet';\n\nvar GeojsonLayer = /*#__PURE__*/function (_React$Component) {\n  _inherits(GeojsonLayer, _React$Component);\n\n  var _super = _createSuper(GeojsonLayer);\n\n  function GeojsonLayer() {\n    _classCallCheck(this, GeojsonLayer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GeojsonLayer, [{\n    key: \"render\",\n    value: function render() {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"fetchData\",\n    value: function fetchData(url) {}\n  }]);\n\n  return GeojsonLayer;\n}(React.Component);\n\nexport { GeojsonLayer as default };","map":{"version":3,"sources":["/home/svatostop/Desktop/хахатон/maps/src/GeojsonLayer.jsx"],"names":["React","GeoJson","FeatureGroup","Popup","GeojsonLayer","url","Component"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,KAAhC,QAA4C,eAA5C;;IAEqBC,Y;;;;;;;;;;;;;WACpB,kBAAQ,CAEP;;;WACD,6BAAmB,CAElB;;;WACD,gCAAsB,CAErB;;;WACD,mBAAUC,GAAV,EAAc,CAEb;;;;EAZwCL,KAAK,CAACM,S;;SAA3BF,Y","sourcesContent":["import React from 'react';\nimport { GeoJson, FeatureGroup, Popup} from 'react-leaflet'\n\nexport default class GeojsonLayer extends React.Component{\n\trender(){\n\n\t}\n\tcomponentDidMount(){\n\n\t}\n\tcomponentWillUnmount(){\n\n\t}\n\tfetchData(url){\n\n\t}\n}"]},"metadata":{},"sourceType":"module"}