[{"/home/svatostop/Desktop/хахатон/maps/src/index.js":"1","/home/svatostop/Desktop/хахатон/maps/src/basic.js":"2","/home/svatostop/Desktop/хахатон/maps/src/osm-provider.js":"3","/home/svatostop/Desktop/хахатон/maps/src/reportWebVitals.js":"4","/home/svatostop/Desktop/хахатон/maps/src/App.js":"5","/home/svatostop/Desktop/хахатон/maps/src/GeojsonLayer.jsx":"6"},{"size":499,"mtime":1632518259974,"results":"7","hashOfConfig":"8"},{"size":1259,"mtime":1632563079614,"results":"9","hashOfConfig":"8"},{"size":274,"mtime":1632520438501,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1632513682306,"results":"11","hashOfConfig":"8"},{"size":2734,"mtime":1632562561972,"results":"12","hashOfConfig":"8"},{"size":1104,"mtime":1632563171107,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ls9y7b",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/svatostop/Desktop/хахатон/maps/src/index.js",[],["30","31"],"/home/svatostop/Desktop/хахатон/maps/src/basic.js",["32","33"],"\nimport React, { setState, useState, useRef } from \"react\";\n\nimport { MapContainer, TileLayer} from \"react-leaflet\";\nimport osm from \"./osm-provider\";\nimport \"leaflet/dist/leaflet.css\";\n\nimport GeojsonLayer from './GeojsonLayer'\n\n\nconst BasicMap = () => {\n\n\tconst [center, setCenter] = useState({lat:55.757332, lng: 37.619374});\n\tconst ZOOM_LEVEL = 9;\n\tconst mapRef = useRef();\n \n  const [geojsonvisible,setGeo] = useState(false);\n\n  function onGeojsonToggle(bool) {\n    setGeo(true)\n  }\n\n\treturn (\n\n\t\t<>\n\t\t<div className=\"row\">\n\t\t<div className=\"col text-center\">\n\t\t\t<div className=\"col\">\n\t\t\t\t<MapContainer\n\t\t\t\tcenter={center}\n\t\t\t\tzoom={ZOOM_LEVEL}\n\t\t\t\tref={mapRef}\n\t\t\t\t>\n\n\n\t\t\t\t<TileLayer url={osm.maptiler.url} attribution={osm.maptiler.attribution}/>\n\t\t\t\t\t\t\t\t     <div className=\"geojson-toggle\">\n\t\t\t            <label htmlFor=\"layertoggle\"> Toggle Geojson </label>\n\t\t\t           \n\t\t\t            <input type=\"checkbox\"\n\t\t\t            name=\"layertoggle\" id=\"layertoggle\"\n\t\t\t            value={geojsonvisible} onChange={onGeojsonToggle} />       \n\t\t\t            </div>\n\n\t\t\t            {\n\t\t\t        geojsonvisible && <GeojsonLayer url=\"geojson.json\"/>\n\n\t\t\t            }\n\n\t\t\t\t</MapContainer>\n\t\t\t</div>\n\t\t</div>\n\t\t</div> \n\t\t</>\n\n\t);\n};\n\nexport default BasicMap;","/home/svatostop/Desktop/хахатон/maps/src/osm-provider.js",["34"],"export default{\n\tmaptiler:\n\t{\n\t\turl:\"https://api.maptiler.com/maps/outdoor/256/{z}/{x}/{y}.png?key=lb7Ns5b7LjuNLUlUgxCG\",\n\t\tattribution: '&copy; <a href=\"https://www.maptiler.com/\">MapTiler<a/> &copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t},\n};","/home/svatostop/Desktop/хахатон/maps/src/reportWebVitals.js",[],"/home/svatostop/Desktop/хахатон/maps/src/App.js",["35","36","37","38","39","40","41"],"import React, { Suspense, useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport BasicMap from './basic';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport grey from '@material-ui/core/colors/grey';\nimport green from '@material-ui/core/colors/green';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: grey[5],\n    borderRadius: 20,\n  },\n  textx:\n  {\n    height: '4vh',\n\n    width: '70vw',\n },\n  textField:\n  {\n    height: '27vh',\n    width: '90vw',\n  },\n  butt:\n  {\n    color: grey[5],\n    borderRadius: 15,\n    border: '2px solid #00B337',\n    width: '40vw',\n    height: '4vh',\n    '&:hover': {\n      backgroundColor: green[600],\n      borderColor: green[600],\n      boxShadow: 'none',\n    }\n  }\n\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n\n\n         <Grid container\n          direction=\"column\"\n          justifyContent=\"flex-end\"\n          alignItems=\"center\">\n\n            <Card className={classes.root}>\n               <Typography align=\"center\" variant=\"h6\" component=\"h4\" className={classes.text}>\n                      Мария Фул-стэк\n                    </Typography>\n              <BasicMap/>\n\n              <Grid className={classes.textField} container   direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"center\">\n                <CardActions>\n                     <TextField className={classes.textx}\n                      required\n                      id=\"standard-required\"\n                      label=\"Откуда\"\n                      defaultValue=\"\"\n                      variant=\"standard\"\n                    />\n                </CardActions>\n  \n                <CardActions>\n                     <TextField className={classes.textx}\n                      required\n                      id=\"standard-required\"\n                      label=\"Куда\"\n                      defaultValue=\"\"\n                      variant=\"standard\"\n                    />\n                </CardActions>\n  \n                <CardActions>\n                  <Button variant=\"outlined\" size=\"medium\" className={classes.butt} >\n                    ВПЕРЕД\n                  </Button>\n                </CardActions>\n                </Grid>\n\n        </Card>\n\n      </Grid>\n\n\n    );\n}\n\nexport default App;","/home/svatostop/Desktop/хахатон/maps/src/GeojsonLayer.jsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":17,"nodeType":"48","messageId":"49","endLine":2,"endColumn":25},{"ruleId":"46","severity":1,"message":"50","line":13,"column":17,"nodeType":"48","messageId":"49","endLine":13,"endColumn":26},{"ruleId":"51","severity":1,"message":"52","line":1,"column":1,"nodeType":"53","endLine":7,"endColumn":3},{"ruleId":"46","severity":1,"message":"54","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"55","line":1,"column":27,"nodeType":"48","messageId":"49","endLine":1,"endColumn":36},{"ruleId":"46","severity":1,"message":"56","line":1,"column":38,"nodeType":"48","messageId":"49","endLine":1,"endColumn":46},{"ruleId":"46","severity":1,"message":"57","line":4,"column":27,"nodeType":"48","messageId":"49","endLine":4,"endColumn":33},{"ruleId":"46","severity":1,"message":"58","line":4,"column":35,"nodeType":"48","messageId":"49","endLine":4,"endColumn":41},{"ruleId":"46","severity":1,"message":"59","line":4,"column":43,"nodeType":"48","messageId":"49","endLine":4,"endColumn":48},{"ruleId":"46","severity":1,"message":"60","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":22},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'setState' is defined but never used.","Identifier","unusedVar","'setCenter' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Suspense' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'CardActionArea' is defined but never used.","no-global-assign","no-unsafe-negation"]